install.packages("rmarkdown")
install.packages("tinytex")
library("tinytex")

diabetes <- read.csv(file= "C:/Users/Fernando Hoppe/Downloads/diabetes.csv")

str(diabetes)

colSums(is.na(diabetes))

summary(diabetes$Insulin)
boxplot(diabetes$Insulin)

boxplot(diabetes)

hist(diabetes$Pregnancies)
hist(diabetes$Age)
hist(diabetes$BMI)

install.packages("dplyr")
library("dplyr")
diabetes2 <- diabetes %>%
  filter(Insulin<=250)

summary(diabetes2)

boxplot(diabetes2$Insulin)

# Construcao do Modelo

# Divisao dos dados

install.packages("caTools")
library(caTools)

set.seed(123)
index = sample.split(diabetes2$Pregnancies,SplitRatio = .70)

index

train = subset(diabetes2, index == TRUE)
test = subset(diabetes2, index == FALSE)


dim(diabetes2)
dim(train)
dim(test)

install.packages("caret")
install.packages("e1071")

library(caret)
library(e1071)

modelo <- train(
  Outcome ~., data=train, method = "knn")

modelo$results
modelo$bestTune

modelo2 <- train(
  Outcome ~., data = train, method = "knn",
   tuneGrid = expand.grid(k = c(1:20)))

modelo2$results

modelo2$bestTune
plot(modelo2)

install.packages("naivebayes")
library(naivebayes)


modelo3 <- train(
  Outcome ~., data = train, method = "naive_bayes")

modelo3$results
modelo3$bestune

install.packages("randomForest")
library(randomForest)

modelo4 <- train(
  Outcome ~., data = train, method = "rpart2"
)
modelo4$results


# Avaliando o modelo

predicoes <- predict(modelo4,test)

predicoes

confusionMatrix(predicoes, test$Outcome)
